{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","butAppendRow","butRemoveRow","butAppendColumn","butRemoveColumn","MAX_ROW","MIN_ROW","addEventListener","removeAttribute","len","querySelectorAll","length","setAttribute","columns","rows","newRow","insertRow","i","insertAdjacentHTML","deleteRow","deleteCell"],"mappings":";AAAA,aAEA,IAAMA,EAAQC,SAASC,cAAc,UAC/BC,EAAeF,SAASC,cAAc,eACtCE,EAAeH,SAASC,cAAc,eACtCG,EAAkBJ,SAASC,cAAc,kBACzCI,EAAkBL,SAASC,cAAc,kBACzCK,EAAU,GACVC,EAAU,EAEhBL,EAAaM,iBAAiB,QAAS,WACrCL,EAAaM,gBAAgB,YAEvBC,IAAAA,EAAMX,EAAMY,iBAAiB,MAAMC,OAErCF,IAAQJ,EAAU,EACpBJ,EAAaW,aAAa,YAAY,GAEtCX,EAAaO,gBAAgB,YAO1B,IAJCK,IAAAA,EAAUf,EAAMgB,KAAK,GAAGJ,iBAAiB,MAEzCK,EAASjB,EAAMkB,UAAUP,GAEtBQ,EAAI,EAAGA,EAAIJ,EAAQF,OAAQM,IAClCF,EAAOG,mBAAmB,YAAa,eAI3ChB,EAAaK,iBAAiB,QAAS,WACrCN,EAAaO,gBAAgB,YAEvBC,IAAAA,EAAMX,EAAMY,iBAAiB,MAAMC,OAErCF,IAAQH,EAAU,EACpBJ,EAAaU,aAAa,YAAY,GAEtCV,EAAaM,gBAAgB,YAE/BV,EAAMqB,UAAUV,EAAM,KAGxBN,EAAgBI,iBAAiB,QAAS,WACxCH,EAAgBI,gBAAgB,YAEhBV,EAAMgB,KAAK,GAAGJ,iBAAiB,MAEnCC,SAAWN,EAAU,EAC/BF,EAAgBS,aAAa,YAAY,GAEzCT,EAAgBK,gBAAgB,YAG7B,IAAA,IAAIS,EAAI,EAAGA,EAAInB,EAAMgB,KAAKH,OAAQM,IACrCnB,EAAMgB,KAAKG,GAAGC,mBAAmB,YAAa,eAIlDd,EAAgBG,iBAAiB,QAAS,WACxCJ,EAAgBK,gBAAgB,YAE1BK,IAAAA,EAAUf,EAAMgB,KAAK,GAAGJ,iBAAiB,MAE3CG,EAAQF,SAAWL,EAAU,EAC/BF,EAAgBQ,aAAa,YAAY,GAEzCR,EAAgBI,gBAAgB,YAG7B,IAAA,IAAIS,EAAI,EAAGA,EAAInB,EAAMgB,KAAKH,OAAQM,IACrCnB,EAAMgB,KAAKG,GAAGG,WAAWP,EAAQF,OAAS","file":"main.0b92c734.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst table = document.querySelector('.field');\r\nconst butAppendRow = document.querySelector('.append-row');\r\nconst butRemoveRow = document.querySelector('.remove-row');\r\nconst butAppendColumn = document.querySelector('.append-column');\r\nconst butRemoveColumn = document.querySelector('.remove-column');\r\nconst MAX_ROW = 10;\r\nconst MIN_ROW = 2;\r\n\r\nbutAppendRow.addEventListener('click', () => {\n  butRemoveRow.removeAttribute('disabled');\n\r\n  const len = table.querySelectorAll('tr').length;\r\n\r\n  if (len === MAX_ROW - 1) {\r\n    butAppendRow.setAttribute('disabled', true);\r\n  } else {\r\n    butAppendRow.removeAttribute('disabled');\r\n  }\r\n\r\n  const columns = table.rows[0].querySelectorAll('td');\r\n\r\n  const newRow = table.insertRow(len);\n\r\n  for (let i = 0; i < columns.length; i++) {\n    newRow.insertAdjacentHTML('beforeend', '<td></td>');\n  }\r\n});\r\n\r\nbutRemoveRow.addEventListener('click', () => {\n  butAppendRow.removeAttribute('disabled');\n\r\n  const len = table.querySelectorAll('tr').length;\n\r\n  if (len === MIN_ROW + 1) {\r\n    butRemoveRow.setAttribute('disabled', true);\r\n  } else {\r\n    butRemoveRow.removeAttribute('disabled');\r\n  }\r\n  table.deleteRow(len - 1);\r\n});\r\n\r\nbutAppendColumn.addEventListener('click', () => {\r\n  butRemoveColumn.removeAttribute('disabled');\n\r\n  const columns = table.rows[0].querySelectorAll('td');\r\n\r\n  if (columns.length === MAX_ROW - 1) {\r\n    butAppendColumn.setAttribute('disabled', true);\r\n  } else {\r\n    butAppendColumn.removeAttribute('disabled');\r\n  }\r\n\r\n  for (let i = 0; i < table.rows.length; i++) {\r\n    table.rows[i].insertAdjacentHTML('beforeend', '<td></td>');\r\n  }\r\n});\r\n\r\nbutRemoveColumn.addEventListener('click', () => {\r\n  butAppendColumn.removeAttribute('disabled');\n\r\n  const columns = table.rows[0].querySelectorAll('td');\r\n\r\n  if (columns.length === MIN_ROW + 1) {\r\n    butRemoveColumn.setAttribute('disabled', true);\r\n  } else {\r\n    butRemoveColumn.removeAttribute('disabled');\r\n  }\n\r\n  for (let i = 0; i < table.rows.length; i++) {\r\n    table.rows[i].deleteCell(columns.length - 1);\r\n  }\r\n});\r\n"]}